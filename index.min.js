/**
 * @author Adrian C. Miranda <adriancmiranda@gmail.com>
 * @see https://github.com/adriancmiranda/trace
 * @version 1.0.10
 */
!(function (o, e) {
	'use strict';

	o.trace = typeof module === 'object' && typeof module.exports === 'object' ? module.exports = e(o, !0).log : e(o).log;
}(typeof window !== 'undefined' ? window : this, function (o, e) {
	'use strict';

	function t(o, e) { var t = o[e]; o[e] = function () { if (!o.enabled) return void 0; var r = s.call(arguments); return o.history.length < o.scrollback || o.history.shift(), o.history.push({ type: e, message: r }), t && t.apply && t.apply(o, r); }; } function r(o) {
		var e = [],
			r = 'table,assert,count,debug,dir,dirxml,error,exception,group,groupCollapsed,groupEnd,info,timeStamp,profile,profileEnd,time,timeEnd,trace,warn,log'.split(','); for (o.enabled = c || o.enabled; r.length;)t(o, r.pop()); return o.push = function () { e = e.concat(s.call(arguments)); }, o.flush = function () { o.log(e.join('\n')), e = []; }, o;
	} function n(e) { try { console.log(), o.console.history = [], o.console.scrollback = e; } catch (t) { o.console = { history: [], scrollback: e }; } return o.console; } var l = e ? o.url.href : o.location !== o.parent.location ? document.referrer : document.location.href,
		c = /\bdebug\b/i.test(l),
		s = Array.prototype.slice; return r(n(o.console && typeof o.console.scrollback === 'number' ? o.console.scrollback : 1));
}));
